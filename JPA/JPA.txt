JPA E HIBERNATE:
JPA - É UMA API DE PERSISTÊNCIA DE DADOS EM JAVA, USADO PARA MAPEAR OBJETOS PARA ESTRUTURAS DE BANCO DE DADOS RELACIONAIS.

"JPA x JDBC":JDBC É UMA API QUE PERMITE A CONEXÃO DIRETA COM O BANCO DE DADOS E O JPA É UMA ABSTRAÇÃO SOBRE O JDBC FORNECENDO  UMA INTERFACE PARA PERSISTÊNCIA DE DADOS.

HIBERNATE : FRAMEWORK QUE IMPLEMENTA A ESPECIFICAÇÃO DA JPA.

HIBERNATE OFERECE:
MAPEAMENTO DE ENTIDADES: FORNECE UM MAPEAMENTO DE ENTIDADES JAVA PARA TABELAS DE BANCO DE DADOS USANDO ARQUIVOS DE CONFIGURAÇÃO XML

CONSULTAS JPQL: CONSULTAS DE BANCO DE DADOS SEM A NECESSIDADE DE ESCREVER CONSULTAS SQL DIRETAMENTE.

PORTABILIDADE: PORTAVEL ENTRE DIFERENTE BANCO, POIS O MAPEAMENTO É FEITO DE FORMA INDEPENDENTE DO TIPO DO SGBD USADO.


ENTIDADES: ENTIDADES SÃO CLASSES QUE SERÃO PERSISTIDA NO BD - SÃO ANOTADAS COMO @Entity = REPRESENTA TABELAS DO BD;

RELACIONAMENTOS: RELACIONAMENO ENTRE ENTIDADES 
Anotações:
@OneToOne - UM PARA UM
@OneToMany - UM PARA MUITOS
@ManyToOne - MUITOS PARA UM
@ManyToMany - MUITOS PARA MUITOS
@Id - INDICA A CHAVE PRIMARIA DA ENTIDADE.
@GeneratedValue - DEFINE COMO A CHAVE PRIMARIA É GERADA AUTOMATICAMENTE.
@Column -  MAPEIA O ATRIBUTO PARA UMA COLUNA ESPECIFICA NO BD.
@JoinColumn - USADO PARA ESPECIFICAR DETALHES DE COMO A CHAVE ESTRANGEIRA DEVE SER MAPEADA NO BD;

HIBERNATE E ENTITYMANAGER: ENTITYMANAGER É USADO COMO INTERFACE PRINCAPAL(GERENCIA AS ENTIDADES E PERMITE REALIZAR OPERAÇÕES DE BANCO DE DADOS).

RELACIONAMENTO BIDIRECIONAL: É UM RELACIONAMENTO QUE AMBAS A ENTIDADES TEM CONHECIMENTO UMA DA OUTRA.

@cascade - SÃO COMPORTAMENTOS DO BD PARA GARANTIR QUE UMA FUNCIONALIDADE SEJA APLICADA PARA TODAS AS ENTIDADES QUE ESTÃO ASSOCIADAS A ENTIDADE PAI.
@Embedded - É UM OBJETO QUE VAI COMPOR UMA ENTIDADE;

@Inheritance - É USADA PARA MAPEAR HERENÇA EM ENTIDADES. 

OBS:A ANOTAÇÃO @Inheritance DEFINI A ESTRATÉGIA DE HERENÇA A SER USADA, COMO HERENÇA ÚNICA TABELA, TABELA POR CLASSE OU UNIÃO DE TABELA.
